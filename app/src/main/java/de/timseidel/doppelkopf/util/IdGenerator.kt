package de.timseidel.doppelkopf.util

/**
A utility class for generating unique IDs and codes.
 */
class IdGenerator {

    companion object {
        /**
         * Generates a unique ID string by concatenating a provided object tag with the current system time in milliseconds.
         *
         * @param objectTag The tag to be included in the generated ID. Defaults to "id" if not provided.
         * @return A unique ID string generated by concatenating the object tag with the current system time in milliseconds.
         */
        fun generateIdWithTimestamp(objectTag: String = "id"): String {
            return "${objectTag}_${System.currentTimeMillis()}"
        }

        /**
         * Generates a unique six-digit group code by concatenating the current system time in milliseconds with leading zeros.
         *
         * @return A unique six-digit group code generated by concatenating the current system time in milliseconds with leading zeros.
         */
        fun generateGroupCode(): String {
            val codeBuilder = StringBuilder()
            val millisString = (System.currentTimeMillis() % 1000000).toString()
            while (codeBuilder.length + millisString.length < 6) {
                codeBuilder.append("0")
            }
            codeBuilder.append(millisString)

            return codeBuilder.toString()
        }
    }
}
